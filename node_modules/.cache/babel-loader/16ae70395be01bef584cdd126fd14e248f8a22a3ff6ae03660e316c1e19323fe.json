{"ast":null,"code":"import { apiClient, API_ENDPOINTS } from '../utils/api';\nexport class UserService {\n  // Get all users\n  static async getUsers() {\n    try {\n      return await apiClient.get(API_ENDPOINTS.USERS);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      // Return empty array instead of throwing error\n      return [];\n    }\n  }\n\n  // Get user by ID\n  static async getUserById(id) {\n    try {\n      return await apiClient.get(API_ENDPOINTS.USER_DETAILS(id));\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      return null;\n    }\n  }\n\n  // Get users by role\n  static async getUsersByRole(role) {\n    try {\n      return await apiClient.get(API_ENDPOINTS.USERS_BY_ROLE(role));\n    } catch (error) {\n      console.error('Error fetching users by role:', error);\n      throw error;\n    }\n  }\n\n  // Create user\n  static async createUser(userData) {\n    try {\n      return await apiClient.post(API_ENDPOINTS.USERS, userData);\n    } catch (error) {\n      console.error('Error creating user:', error);\n      throw error;\n    }\n  }\n\n  // Update user\n  static async updateUser(id, userData) {\n    try {\n      return await apiClient.put(API_ENDPOINTS.USER_DETAILS(id), userData);\n    } catch (error) {\n      console.error('Error updating user:', error);\n      throw error;\n    }\n  }\n\n  // Delete user\n  static async deleteUser(id) {\n    try {\n      return await apiClient.delete(API_ENDPOINTS.USER_DETAILS(id));\n    } catch (error) {\n      console.error('Error deleting user:', error);\n      throw error;\n    }\n  }\n\n  // Get residents (owners and tenants)\n  static async getResidents() {\n    try {\n      const [owners, tenants] = await Promise.all([this.getUsersByRole('RESIDENT').catch(() => []), this.getUsersByRole('RESIDENT').catch(() => [])]);\n      return {\n        owners: owners.filter(user => user.role === 'ADMIN' || user.role === 'RESIDENT'),\n        tenants: tenants.filter(user => user.role === 'RESIDENT')\n      };\n    } catch (error) {\n      console.error('Error fetching residents:', error);\n      throw error;\n    }\n  }\n}\nexport default UserService;","map":{"version":3,"names":["apiClient","API_ENDPOINTS","UserService","getUsers","get","USERS","error","console","getUserById","id","USER_DETAILS","getUsersByRole","role","USERS_BY_ROLE","createUser","userData","post","updateUser","put","deleteUser","delete","getResidents","owners","tenants","Promise","all","catch","filter","user"],"sources":["/home/fa063951/Documents/society-management-system-fed/src/services/userService.js"],"sourcesContent":["import { apiClient, API_ENDPOINTS } from '../utils/api';\n\nexport class UserService {\n  // Get all users\n  static async getUsers() {\n    try {\n      return await apiClient.get(API_ENDPOINTS.USERS);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      // Return empty array instead of throwing error\n      return [];\n    }\n  }\n\n  // Get user by ID\n  static async getUserById(id) {\n    try {\n      return await apiClient.get(API_ENDPOINTS.USER_DETAILS(id));\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      return null;\n    }\n  }\n\n  // Get users by role\n  static async getUsersByRole(role) {\n    try {\n      return await apiClient.get(API_ENDPOINTS.USERS_BY_ROLE(role));\n    } catch (error) {\n      console.error('Error fetching users by role:', error);\n      throw error;\n    }\n  }\n\n  // Create user\n  static async createUser(userData) {\n    try {\n      return await apiClient.post(API_ENDPOINTS.USERS, userData);\n    } catch (error) {\n      console.error('Error creating user:', error);\n      throw error;\n    }\n  }\n\n  // Update user\n  static async updateUser(id, userData) {\n    try {\n      return await apiClient.put(API_ENDPOINTS.USER_DETAILS(id), userData);\n    } catch (error) {\n      console.error('Error updating user:', error);\n      throw error;\n    }\n  }\n\n  // Delete user\n  static async deleteUser(id) {\n    try {\n      return await apiClient.delete(API_ENDPOINTS.USER_DETAILS(id));\n    } catch (error) {\n      console.error('Error deleting user:', error);\n      throw error;\n    }\n  }\n\n  // Get residents (owners and tenants)\n  static async getResidents() {\n    try {\n      const [owners, tenants] = await Promise.all([\n        this.getUsersByRole('RESIDENT').catch(() => []),\n        this.getUsersByRole('RESIDENT').catch(() => [])\n      ]);\n      \n      return {\n        owners: owners.filter(user => user.role === 'ADMIN' || user.role === 'RESIDENT'),\n        tenants: tenants.filter(user => user.role === 'RESIDENT')\n      };\n    } catch (error) {\n      console.error('Error fetching residents:', error);\n      throw error;\n    }\n  }\n}\n\nexport default UserService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}